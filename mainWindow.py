# Form implementation generated from reading ui file 'mainwindow1.ui'
#
# Created by: PyQt6 UI code generator 6.1.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from scanner import Scanner

class Ui_PortScanner(object):
    def setupUi(self, PortScanner):
        PortScanner.setObjectName("PortScanner")
        PortScanner.resize(354, 434)
        font = QtGui.QFont()
        font.setFamily("Ubuntu Mono")
        font.setBold(False)
        font.setWeight(50)
        PortScanner.setFont(font)
        PortScanner.setStyleSheet("background-color: rgb(255, 255, 255);\n""")
        #central
        self.centralwidget = QtWidgets.QWidget(PortScanner)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        #host
        self.host = QtWidgets.QLabel(self.centralwidget)
        self.host.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.host.setObjectName("host")
        self.verticalLayout.addWidget(self.host)
        self.hostinput = QtWidgets.QLineEdit(self.centralwidget)
        self.hostinput.setObjectName("hostinput")
        self.hostinput.insert("0.0.0.0, www.website.com")
        self.verticalLayout.addWidget(self.hostinput)
        #start port
        self.start = QtWidgets.QLabel(self.centralwidget)
        self.start.setObjectName("start")
        self.verticalLayout.addWidget(self.start)
        self.startinput = QtWidgets.QSpinBox(self.centralwidget)
        self.startinput.setMinimum(1)
        self.startinput.setMaximum(65535)
        self.startinput.setObjectName("startinput")
        self.verticalLayout.addWidget(self.startinput)
        self.end = QtWidgets.QLabel(self.centralwidget)
        #end port
        self.end.setObjectName("end")
        self.verticalLayout.addWidget(self.end)
        self.endinput = QtWidgets.QSpinBox(self.centralwidget)
        self.endinput.setMinimum(1)
        self.endinput.setMaximum(65535)
        self.endinput.setObjectName("endinput")
        self.verticalLayout.addWidget(self.endinput)
        #result
        self.listView = QtWidgets.QListWidget(self.centralwidget)
        self.listView.setObjectName("listView")
        self.verticalLayout.addWidget(self.listView)
        # scan button
        self.scanButton = QtWidgets.QPushButton(self.centralwidget)
        self.scanButton.setObjectName("Scan")
        self.verticalLayout.addWidget(self.scanButton)
        PortScanner.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(PortScanner)
        self.statusbar.setObjectName("statusbar")
        PortScanner.setStatusBar(self.statusbar)

        self.retranslateUi(PortScanner)
        QtCore.QMetaObject.connectSlotsByName(PortScanner)

        self.scanner = Scanner()
        self.scanButton.clicked.connect(self.scan)


    def retranslateUi(self, PortScanner):
        _translate = QtCore.QCoreApplication.translate
        PortScanner.setWindowTitle(_translate("PortScanner", "PortScanner"))
        self.host.setText(_translate("PortScanner", "Host"))
        self.start.setText(_translate("PortScanner", "Starting Port"))
        self.end.setText(_translate("PortScanner", "Ending Port"))
        self.scanButton.setText(_translate("PortScanner", "Scan"))

    def scan(self):
        self.scanner.knownPorts()
        self.setHost()
        self.setStartPort()
        self.setStopPort()
        self.scanner.setSave()
        self.scanner.start()
        self.scanner.finished.connect(lambda: self.printResults())
        self.scanner.progress.connect(self.progressView)

    def setStartPort(self):
        #pobranie stratowego portu i przekazanie go do skanera
        startPort = int(self.startinput.text())
        self.scanner.setStartPort(startPort)

    def setStopPort(self):
        # pobranie końcowego portu i przekazanie go do skanera
        stopPort = int(self.endinput.text())
        isportset = self.scanner.setStopPort(stopPort)
        return isportset

    def setHost(self):
        # pobranie hostów i przekazanie go do skanera
        host = str(self.hostinput.text())
        ishostset = self.scanner.setHost(host)
        return ishostset

    def printResults(self):
        #wyświetlanie wyników skanowania
        self.listView.clear()
        results = self.scanner.getResults()
        for item in results:
            self.listView.addItem(item)
        self.listView.show()

    def progressView(self, val):
        if val % 10 == 0:
            self.listView.clear()
            if val % 4 == 0:
                self.listView.addItem("Scanning.")
            elif val % 3 == 0:
                self.listView.addItem("Scanning..")
            else:
                self.listView.addItem("Scanning...")
        self.listView.show()
